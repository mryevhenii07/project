{"version":3,"file":"static/js/655.7f8ad9f8.chunk.js","mappings":"+MAEMA,EAAW,0DAEV,SAASC,EAAUC,GACxB,OAAOC,IAAAA,IAAA,UACGH,EADH,8BACiCE,IACrCE,MAAK,SAACC,GAAD,OAAcA,EAASC,IAAvB,GACT,CAEM,SAASC,IACd,OAAOJ,IAAAA,IAAA,UAAaH,EAAb,UAA8BI,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKE,KAA5B,GAC3C,CAOM,SAASC,IACd,OAAON,IAAAA,IAAA,UACGH,EADH,cAEJI,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKI,SAA5B,GACT,C,0KCtBD,G,QAA2B,wBAA3B,EAAkE,4BAAlE,EAAqG,mBAArG,EAAoI,wBAApI,EAAgL,gCAAhL,EAAiO,6BAAjO,EAA+Q,6BAA/Q,EAAwT,wBAAxT,EAAwV,oBAAxV,EAAsX,sBAAtX,EAA6Z,6BAA7Z,EAAsc,wBAAtc,EAAgf,8BAAhf,EAAwhB,sBAAxhB,EAA6jB,2BAA7jB,EAAymB,6BAAzmB,EAAmpB,yBAAnpB,EAA4rB,4B,SC2M5rB,EAnKa,WAAO,IAAD,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eACA,GADA,WAC0BA,EAAAA,EAAAA,UAAS,KAAnC,eAAOH,EAAP,KAAcM,EAAd,KAEA,GAAkCH,EAAAA,EAAAA,UAAS,IAA3C,eAAOD,EAAP,KAAkBK,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,MAAgBL,KAAKW,IACrBR,EAAAA,EAAAA,MAAaH,KAAKU,EACnB,GAAE,IAEHG,QAAQC,IAAIV,IACKW,EAAAA,EAAAA,MAAjB,IAEA,GAKIC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,aAJlBC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,KAGEC,MAHF,EAIEC,WAAaC,EAJf,EAIeA,OAAQC,EAJvB,EAIuBA,QAsBvB,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,wCACA,kBAAMC,SAAUP,GAlBH,SAAC,GAAoD,IAAlDQ,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAYvDlB,QAAQC,IAAIa,EAAOC,EAAUC,EAAaC,EAAOC,EAClD,IAK2CP,UAAWC,EAAnD,WACE,mBAAOO,QAAQ,GAAGR,UAAWC,EAA7B,WACE,SAACQ,EAAA,GAAD,gBACET,UAAWC,GACPP,EAAS,WAAY,CACvBgB,SAAU,iBACVC,UAAW,CAAE3B,MAAO,EAAG4B,QAAS,wBAChCC,UAAW,CAAE7B,MAAO,GAAI4B,QAAS,4BALrC,IAOEE,GAAG,sBACHC,MAAM,YACNC,aAAa,eACbC,QAAQ,eAEV,gBAAKjB,UAAWC,EAAhB,UACS,OAANH,QAAM,IAANA,OAAA,EAAAA,EAAQM,YACP,cAAGJ,UAAWC,EAAd,UAA8B,OAANH,QAAM,IAANA,GAAA,UAAAA,EAAQM,gBAAR,eAAkBQ,UAAW,iBAK3D,mBAAOJ,QAAQ,GAAGR,UAAWC,EAA7B,WACE,SAACQ,EAAA,GAAD,gBACET,UAAWC,EACXiB,KAAK,SACDxB,EAAS,QAAS,CACpBgB,SAAU,iBACVC,UAAW,CAAE3B,MAAO,EAAG4B,QAAS,yBAChCC,UAAW,CAAE7B,MAAO,GAAI4B,QAAS,yBACjCO,QAAS,CACPnC,MAAO,2CACP4B,QAAS,4BATf,IAYEE,GAAG,uBACHC,MAAM,QACNC,aAAa,gBACbC,QAAQ,eAEV,gBAAKjB,UAAWC,EAAhB,UACS,OAANH,QAAM,IAANA,OAAA,EAAAA,EAAQK,SACP,cAAGH,UAAWC,EAAd,UAA8B,OAANH,QAAM,IAANA,GAAA,UAAAA,EAAQK,aAAR,eAAeS,UAAW,iBAIxD,mBAAOJ,QAAQ,GAAGR,UAAWC,EAA7B,WACE,SAACQ,EAAA,GAAD,gBAEET,UAAWC,EACXiB,KAAK,SACDxB,EAAS,QAAS,CACpBgB,SAAU,iBACVS,QAAS,CACPnC,MAAO,yBACP4B,QAAS,0BARf,IAWEE,GAAG,uBACHC,MAAM,QACNC,aAAa,gBACbC,QAAQ,eAEV,gBAAKjB,UAAWC,EAAhB,SAGS,OAANH,QAAM,IAANA,GAAAA,EAAQS,OACP,cAAGP,UAAWC,EAAd,UAA8B,OAANH,QAAM,IAANA,GAAA,UAAAA,EAAQS,aAAR,eAAeK,UAAW,YAElD,cAAGZ,UAAWC,EAAd,uCAIN,cAAGD,UAAWC,EAAd,mCAEA,SAACmB,EAAA,EAAD,CACE,aAAW,SACXC,KAAK,UACLrC,MAAOA,EACPsC,SApGa,SAACC,GACpBtC,EAASsC,EAAEC,OAAOxC,MACnB,EA8FK,SAMGF,EAAU2C,KAAI,YAAmB,IAAhBX,EAAe,EAAfA,GAAIO,EAAW,EAAXA,KACpB,OACE,mBAACK,EAAA,GAAD,kBACMhC,EAAS,WAAY,CAAEgB,SAAU,oBADvC,IAEEiB,IAAKb,EACLd,UAAWC,EACXjB,MAAOqC,EACPO,SAAS,SAACC,EAAA,EAAD,CAAOC,MAAM,cACtBf,MAAOM,IAGZ,OAGH,iBAAKrB,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAnB,qBACA,kCACEiB,KAAK,QACDxB,EAAS,QAAS,CAAEgB,SAAU,oBAFpC,IAGEV,UAAWC,EACX8B,YAAY,2BAGhB,gBAAK/B,UAAWC,EAAhB,UACE,mBACEiB,KAAK,SACLlB,UAAkB,UAAPD,EAAaE,EAAuBA,GAC/C+B,UAAWjC,EAHb,2BAUJ,qBAGL,C","sources":["api/Api.js","webpack://project/./src/pages/form/Form.module.scss?0f33","pages/form/Form.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://frontend-test-assignment-api.abz.agency/api/v1/\";\n\nexport function fetchUser(count) {\n  return axios\n    .get(`${BASE_URL}users?page=1&count=${count}`)\n    .then((response) => response.data);\n}\n\nexport function fetchToken() {\n  return axios.get(`${BASE_URL}token`).then((response) => response.data.token);\n}\n\nexport function createUser(users) {\n  return axios\n    .post(`${BASE_URL}users`, users)\n    .then((response) => response.data);\n}\nexport function fetchPosition() {\n  return axios\n    .get(`${BASE_URL}positions`)\n    .then((response) => response.data.positions);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapForm\":\"Form_wrapForm__cCIXo\",\"formMainTitle\":\"Form_formMainTitle__WdEtV\",\"form\":\"Form_form__wD8nW\",\"formLabel\":\"Form_formLabel__cgr2s\",\"formInputYourName\":\"Form_formInputYourName__EdOF9\",\"formInputEmail\":\"Form_formInputEmail__dmmjM\",\"formInputPhone\":\"Form_formInputPhone__w+xKa\",\"wrapError\":\"Form_wrapError__sz2h0\",\"error\":\"Form_error__VktGR\",\"noError\":\"Form_noError__xZuP+\",\"selectPosition\":\"Form_selectPosition__XytPK\",\"formRadio\":\"Form_formRadio__8sF-u\",\"wrapBtnTextarea\":\"Form_wrapBtnTextarea__xxewK\",\"formBtn\":\"Form_formBtn__zbj6L\",\"formTextarea\":\"Form_formTextarea__te59x\",\"wrapFormSubmit\":\"Form_wrapFormSubmit__kjBsF\",\"formSubmit\":\"Form_formSubmit__9C1g3\",\"actFormSubmit\":\"Form_actFormSubmit__EsnXC\"};","import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// import { withStyles } from '@material-ui/core';\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport { createUser, fetchPosition, fetchToken } from \"../../api/Api\";\n\nimport { addUser } from \"../../store/userSlice/userSlice\";\n\nimport s from \"./Form.module.scss\";\n\n// const CssTextField = withStyles({\n//   root: {\n//     '& label.Mui-focused': {\n//       color: '#b4b4b4',\n//     },\n//     '& .MuiInput-underline:after': {\n//       borderBottomColor: 'yellow',\n//     },\n//     '& .MuiOutlinedInput-root': {\n//       '& fieldset': {\n//         borderColor: 'b4b4b4',\n//       },\n//       '&:hover fieldset': {\n//         borderColor: '#D0CFCF',\n//       },\n//       '&.Mui-focused fieldset': {\n//         borderColor: 'yellow',\n//       },\n//     },\n//   },\n// })(TextField);\n\nconst Form = () => {\n  const [value, setValue] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  // const [user, setUser] = useState(\"\");\n  const [positions, setPositions] = useState([]);\n\n  useEffect(() => {\n    fetchPosition().then(setPositions);\n    fetchToken().then(setToken);\n  }, []);\n\n  console.log(token);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: \"onChange\" });\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const onSubmit = ({ email, yourName, position_id, photo, phone }) => {\n    // { email, yourName, position_id, photo: photo[0].name, token },\n    // dispatch(\n    //   addUser({\n    //     email,\n    //     phone,\n    //     yourName,\n    //     position_id,\n    //     photo: photo[0].name,\n    //     token,\n    //   }),\n    // );\n    console.log(email, yourName, position_id, photo, phone);\n  };\n\n  return (\n    <div className={s.wrapForm}>\n      <h1 className={s.formMainTitle}>Working with POST request</h1>\n      <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n        <label htmlFor=\"\" className={s.formLabel}>\n          <TextField\n            className={s.formInputYourName}\n            {...register(\"yourName\", {\n              required: \"Required field\",\n              minLength: { value: 2, message: \"Minimum 2 characters\" },\n              maxLength: { value: 60, message: \"Maximum 60 characters\" },\n            })}\n            id=\"outlined-text-input\"\n            label=\"Your name\"\n            autoComplete=\"current-text\"\n            variant=\"outlined\"\n          />\n          <div className={s.wrapError}>\n            {errors?.yourName && (\n              <p className={s.error}>{errors?.yourName?.message || \"Error!\"}</p>\n            )}\n          </div>\n        </label>\n\n        <label htmlFor=\"\" className={s.formLabel}>\n          <TextField\n            className={s.formInputEmail}\n            type=\"email\"\n            {...register(\"email\", {\n              required: \"Required field\",\n              minLength: { value: 7, message: \" Minimum 7 characters\" },\n              maxLength: { value: 26, message: \"Maximum 26 characters\" },\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: \"Invalid email address\",\n              },\n            })}\n            id=\"outlined-email-input\"\n            label=\"Email\"\n            autoComplete=\"current-email\"\n            variant=\"outlined\"\n          />\n          <div className={s.wrapError}>\n            {errors?.email && (\n              <p className={s.error}>{errors?.email?.message || \"errors\"}</p>\n            )}\n          </div>\n        </label>\n        <label htmlFor=\"\" className={s.formLabel}>\n          <TextField\n            // color={isValid ? 'secondary' : 'primary'}\n            className={s.formInputPhone}\n            type=\"phone\"\n            {...register(\"phone\", {\n              required: \"Required field\",\n              pattern: {\n                value: /^[+]{0,1}380[0-9]{9}$/i,\n                message: \"+38 (XXX) XXX-XX-XX\",\n              },\n            })}\n            id=\"outlined-phone-input\"\n            label=\"Phone\"\n            autoComplete=\"current-phone\"\n            variant=\"outlined\"\n          />\n          <div className={s.wrapError}>\n            {/* +38 (XXX)XXX-XX-XX */}\n            {/* {errors?.phone && <p className={s.error}>{errors?.phone?.message || 'Error!'}</p>} */}\n            {errors?.phone ? (\n              <p className={s.error}>{errors?.phone?.message || \"Error!\"}</p>\n            ) : (\n              <p className={s.noError}>+38 (XXX) XXX-XX-XX</p>\n            )}\n          </div>\n        </label>\n        <p className={s.selectPosition}>Select your position</p>\n\n        <RadioGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          value={value}\n          onChange={handleChange}\n        >\n          {positions.map(({ id, name }) => {\n            return (\n              <FormControlLabel\n                {...register(\"position\", { required: \"Required field\" })}\n                key={id}\n                className={s.formRadio}\n                value={name}\n                control={<Radio color=\"secondary\" />}\n                label={name}\n              />\n            );\n          })}\n        </RadioGroup>\n\n        <div className={s.wrapBtnTextarea}>\n          <button className={s.formBtn}>Upload</button>\n          <input\n            type=\"file\"\n            {...register(\"photo\", { required: \"Required field\" })}\n            className={s.formTextarea}\n            placeholder=\"Upload your photo\"\n          ></input>\n        </div>\n        <div className={s.wrapFormSubmit}>\n          <button\n            type=\"submit\"\n            className={isValid ? `${s.actFormSubmit}` : `${s.formSubmit}`}\n            disabled={!isValid}\n          >\n            Sing up\n          </button>\n        </div>\n      </form>\n\n      <div></div>\n    </div>\n  );\n};\n\nexport default Form;\n"],"names":["BASE_URL","fetchUser","count","axios","then","response","data","fetchToken","token","fetchPosition","positions","useState","value","setValue","setToken","setPositions","useEffect","console","log","useDispatch","useForm","mode","register","handleSubmit","reset","formState","errors","isValid","className","s","onSubmit","email","yourName","position_id","photo","phone","htmlFor","TextField","required","minLength","message","maxLength","id","label","autoComplete","variant","type","pattern","RadioGroup","name","onChange","e","target","map","FormControlLabel","key","control","Radio","color","placeholder","disabled"],"sourceRoot":""}