{"version":3,"file":"static/js/655.cde137a3.chunk.js","mappings":"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","sources":["api/Api.js","webpack://project/./src/pages/form/Form.module.scss?0f33","pages/form/Form.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://frontend-test-assignment-api.abz.agency/api/v1/\";\n\nexport function fetchUser(count) {\n  return axios\n    .get(`${BASE_URL}users?page=1&count=${count}`)\n    .then((response) => response.data);\n}\n\nexport function fetchToken() {\n  return axios.get(`${BASE_URL}token`).then((response) => response.data.token);\n}\n\nexport function createUser(token, user) {\n  return axios\n    .post(`${BASE_URL}users`, user, { headers: { Token: token } })\n    .then((response) => response.data);\n}\nexport function fetchPosition() {\n  return axios\n    .get(`${BASE_URL}positions`)\n    .then((response) => response.data.positions);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapForm\":\"Form_wrapForm__xvB93\",\"formMainTitle\":\"Form_formMainTitle__H-Aty\",\"form\":\"Form_form__KiIxm\",\"formLabel\":\"Form_formLabel__XEW-5\",\"formInputYourName\":\"Form_formInputYourName__b0My1\",\"formInputEmail\":\"Form_formInputEmail__+rwDp\",\"formInputPhone\":\"Form_formInputPhone__SKsOK\",\"test\":\"Form_test__82pLy\",\"wrapError\":\"Form_wrapError__WdplE\",\"error\":\"Form_error__mYrgJ\",\"noError\":\"Form_noError__Opa+8\",\"selectPosition\":\"Form_selectPosition__wXd-H\",\"formRadio\":\"Form_formRadio__nWqMf\",\"wrapBtnPhoto\":\"Form_wrapBtnPhoto__zl1u-\",\"upload\":\"Form_upload__z4MRm\",\"uploadPhoto\":\"Form_uploadPhoto__MReGM\",\"wrapFormSubmit\":\"Form_wrapFormSubmit__PkWk+\",\"formSubmit\":\"Form_formSubmit__gJbXX\",\"actFormSubmit\":\"Form_actFormSubmit__8TBMe\"};","import { useState, useEffect, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// import { withStyles } from '@material-ui/core';\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport { createUser, fetchPosition, fetchToken } from \"../../api/Api\";\n\nimport { addUser } from \"../../store/userSlice/userSlice\";\n\nimport s from \"./Form.module.scss\";\n\n// const CssTextField = withStyles({\n//   root: {\n//     '& label.Mui-focused': {\n//       color: '#b4b4b4',\n//     },\n//     '& .MuiInput-underline:after': {\n//       borderBottomColor: 'yellow',\n//     },\n//     '& .MuiOutlinedInput-root': {\n//       '& fieldset': {\n//         borderColor: 'b4b4b4',\n//       },\n//       '&:hover fieldset': {\n//         borderColor: '#D0CFCF',\n//       },\n//       '&.Mui-focused fieldset': {\n//         borderColor: 'yellow',\n//       },\n//     },\n//   },\n// })(TextField);\n\nconst Form = () => {\n  const [value, setValue] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n\n  const inputRef = useRef();\n\n  const onChangePhoto = () => {\n    console.log(inputRef);\n  };\n\n  const [positions, setPositions] = useState([]);\n  useEffect(() => {\n    fetchPosition().then(setPositions);\n    fetchToken().then(setToken);\n  }, []);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: \"onChange\" });\n\n  const handleChange = (e) => {\n    setValue(parseInt(e.target.value));\n    // console.log(e.target.value);\n  };\n\n  const onSubmit = ({ email, name, position_id, photo, phone }) => {\n    const formData = new FormData();\n    formData.set(\"email\", email);\n    formData.set(\"name\", name);\n    formData.set(\"phone\", phone);\n    formData.set(\"position_id\", position_id);\n    formData.set(\"photo\", photo[0]);\n\n    createUser(token, formData);\n  };\n\n  return (\n    <div className={s.wrapForm}>\n      <h1 className={s.formMainTitle}>Working with POST request</h1>\n      <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n        <label htmlFor=\"\" className={s.formLabel}>\n          <TextField\n            className={s.formInputYourName}\n            {...register(\"name\", {\n              required: \"Required field\",\n              minLength: { value: 2, message: \"Minimum 2 characters\" },\n              maxLength: { value: 60, message: \"Maximum 60 characters\" },\n            })}\n            id=\"outlined-text-input\"\n            label=\"Your name\"\n            autoComplete=\"current-text\"\n            variant=\"outlined\"\n          />\n          <div className={s.wrapError}>\n            {errors?.name && (\n              <p className={s.error}>{errors?.name?.message || \"Error!\"}</p>\n            )}\n          </div>\n        </label>\n\n        <label htmlFor=\"\" className={s.formLabel}>\n          <TextField\n            className={s.formInputEmail}\n            type=\"email\"\n            {...register(\"email\", {\n              required: \"Required field\",\n              minLength: { value: 7, message: \" Minimum 7 characters\" },\n              maxLength: { value: 26, message: \"Maximum 26 characters\" },\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: \"Invalid email address\",\n              },\n            })}\n            id=\"outlined-email-input\"\n            label=\"Email\"\n            autoComplete=\"current-email\"\n            variant=\"outlined\"\n          />\n          <div className={s.wrapError}>\n            {errors?.email && (\n              <p className={s.error}>{errors?.email?.message || \"errors\"}</p>\n            )}\n          </div>\n        </label>\n        <label htmlFor=\"\" className={s.formLabel}>\n          <TextField\n            className={s.formInputPhone}\n            type=\"phone\"\n            {...register(\"phone\", {\n              required: \"Required field\",\n              pattern: {\n                value: /^[+]{0,1}380[0-9]{9}$/i,\n                message: \"+38 (XXX) XXX-XX-XX\",\n              },\n            })}\n            id=\"outlined-phone-input\"\n            label=\"Phone\"\n            autoComplete=\"current-phone\"\n            variant=\"outlined\"\n          />\n          <div className={s.wrapError}>\n            {errors?.phone ? (\n              <p className={s.error}>{errors?.phone?.message || \"Error!\"}</p>\n            ) : (\n              <p className={s.noError}>+38 (XXX) XXX-XX-XX</p>\n            )}\n          </div>\n        </label>\n        <p className={s.selectPosition}>Select your position</p>\n\n        <RadioGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          value={value}\n          onChange={handleChange}\n        >\n          {positions.map(({ id, name }) => {\n            return (\n              <FormControlLabel\n                {...register(\"position_id\", { required: \"Required field\" })}\n                key={id}\n                className={s.formRadio}\n                value={id}\n                control={<Radio color=\"secondary\" />}\n                label={name}\n              />\n            );\n          })}\n        </RadioGroup>\n\n        <button className={s.wrapBtnPhoto} onClick={onChangePhoto}>\n          <div className={s.upload}>Upload</div>{\" \"}\n          <input\n            // ref={inputRef}\n            type=\"file\"\n            {...register(\"photo\", {\n              required: \"Required field\",\n              validate: {\n                lessThan5MB: (files) => files[0]?.size < 5000000 || \"Max 5MB\",\n                acceptedFormats: (files) =>\n                  [\"image/jpeg\", \"image/jpg\"].includes(files[0]?.type) ||\n                  \"not jpeg\",\n              },\n            })}\n            // type=\"hidden\"\n            placeholder=\"Upload your photo\"\n          ></input>\n        </button>\n\n        {/* <button>intRef.current.click()</button> */}\n\n        <div className={s.wrapFormSubmit}>\n          <button\n            type=\"submit\"\n            className={isValid ? `${s.actFormSubmit}` : `${s.formSubmit}`}\n            disabled={!isValid}\n          >\n            Sing up\n          </button>\n        </div>\n      </form>\n\n      <div></div>\n    </div>\n  );\n};\n\nexport default Form;\n"],"names":["BASE_URL","fetchUser","count","axios","then","response","data","fetchToken","token","createUser","user","headers","Token","fetchPosition","positions","useState","value","setValue","setToken","inputRef","useRef","setPositions","useEffect","useForm","mode","register","handleSubmit","reset","formState","errors","isValid","className","s","onSubmit","email","name","position_id","photo","phone","formData","FormData","set","htmlFor","TextField","required","minLength","message","maxLength","id","label","autoComplete","variant","type","pattern","RadioGroup","onChange","e","parseInt","target","map","FormControlLabel","key","control","Radio","color","onClick","console","log","validate","lessThan5MB","files","size","acceptedFormats","includes","placeholder","disabled"],"sourceRoot":""}