{"version":3,"file":"static/js/655.4743bd9c.chunk.js","mappings":"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","sources":["api/Api.js","webpack://project/./src/pages/form/Form.module.scss?0f33","pages/form/Form.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://frontend-test-assignment-api.abz.agency/api/v1/\";\r\n\r\nexport function fetchUser(count) {\r\n  return axios\r\n    .get(`${BASE_URL}users?page=1&count=${count}`)\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport function fetchToken() {\r\n  return axios.get(`${BASE_URL}token`).then((response) => response.data.token);\r\n}\r\n\r\nexport function createUser(users) {\r\n  return axios\r\n    .post(`${BASE_URL}users`, users)\r\n    .then((response) => response.data);\r\n}\r\nexport function fetchPosition() {\r\n  return axios\r\n    .get(`${BASE_URL}positions`)\r\n    .then((response) => response.data.positions);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapForm\":\"Form_wrapForm__xvB93\",\"formMainTitle\":\"Form_formMainTitle__H-Aty\",\"form\":\"Form_form__KiIxm\",\"formLabel\":\"Form_formLabel__XEW-5\",\"formInputYourName\":\"Form_formInputYourName__b0My1\",\"formInputEmail\":\"Form_formInputEmail__+rwDp\",\"formInputPhone\":\"Form_formInputPhone__SKsOK\",\"wrapError\":\"Form_wrapError__WdplE\",\"error\":\"Form_error__mYrgJ\",\"noError\":\"Form_noError__Opa+8\",\"selectPosition\":\"Form_selectPosition__wXd-H\",\"formRadio\":\"Form_formRadio__nWqMf\",\"wrapBtnTextarea\":\"Form_wrapBtnTextarea__0j0Zz\",\"formBtn\":\"Form_formBtn__L-Kq0\",\"formTextarea\":\"Form_formTextarea__FFLha\",\"wrapFormSubmit\":\"Form_wrapFormSubmit__PkWk+\",\"formSubmit\":\"Form_formSubmit__gJbXX\",\"actFormSubmit\":\"Form_actFormSubmit__8TBMe\"};","import { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n// import { withStyles } from '@material-ui/core';\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport { createUser, fetchPosition, fetchToken } from \"../../api/Api\";\r\n\r\nimport { addUser } from \"../../store/userSlice/userSlice\";\r\n\r\nimport s from \"./Form.module.scss\";\r\n\r\n// const CssTextField = withStyles({\r\n//   root: {\r\n//     '& label.Mui-focused': {\r\n//       color: '#b4b4b4',\r\n//     },\r\n//     '& .MuiInput-underline:after': {\r\n//       borderBottomColor: 'yellow',\r\n//     },\r\n//     '& .MuiOutlinedInput-root': {\r\n//       '& fieldset': {\r\n//         borderColor: 'b4b4b4',\r\n//       },\r\n//       '&:hover fieldset': {\r\n//         borderColor: '#D0CFCF',\r\n//       },\r\n//       '&.Mui-focused fieldset': {\r\n//         borderColor: 'yellow',\r\n//       },\r\n//     },\r\n//   },\r\n// })(TextField);\r\n\r\nconst Form = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  // const [user, setUser] = useState(\"\");\r\n  const [positions, setPositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPosition().then(setPositions);\r\n    fetchToken().then(setToken);\r\n  }, []);\r\n\r\n  console.log(token);\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isValid },\r\n  } = useForm({ mode: \"onChange\" });\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const onSubmit = ({ email, yourName, position_id, photo, phone }) => {\r\n    // { email, yourName, position_id, photo: photo[0].name, token },\r\n    // dispatch(\r\n    //   addUser({\r\n    //     email,\r\n    //     phone,\r\n    //     yourName,\r\n    //     position_id,\r\n    //     photo: photo[0].name,\r\n    //     token,\r\n    //   }),\r\n    // );\r\n    console.log(email, yourName, position_id, photo, phone);\r\n  };\r\n\r\n  return (\r\n    <div className={s.wrapForm}>\r\n      <h1 className={s.formMainTitle}>Working with POST request</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n        <label htmlFor=\"\" className={s.formLabel}>\r\n          <TextField\r\n            className={s.formInputYourName}\r\n            {...register(\"yourName\", {\r\n              required: \"Required field\",\r\n              minLength: { value: 2, message: \"Minimum 2 characters\" },\r\n              maxLength: { value: 60, message: \"Maximum 60 characters\" },\r\n            })}\r\n            id=\"outlined-text-input\"\r\n            label=\"Your name\"\r\n            autoComplete=\"current-text\"\r\n            variant=\"outlined\"\r\n          />\r\n          <div className={s.wrapError}>\r\n            {errors?.yourName && (\r\n              <p className={s.error}>{errors?.yourName?.message || \"Error!\"}</p>\r\n            )}\r\n          </div>\r\n        </label>\r\n\r\n        <label htmlFor=\"\" className={s.formLabel}>\r\n          <TextField\r\n            className={s.formInputEmail}\r\n            type=\"email\"\r\n            {...register(\"email\", {\r\n              required: \"Required field\",\r\n              minLength: { value: 7, message: \" Minimum 7 characters\" },\r\n              maxLength: { value: 26, message: \"Maximum 26 characters\" },\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"Invalid email address\",\r\n              },\r\n            })}\r\n            id=\"outlined-email-input\"\r\n            label=\"Email\"\r\n            autoComplete=\"current-email\"\r\n            variant=\"outlined\"\r\n          />\r\n          <div className={s.wrapError}>\r\n            {errors?.email && (\r\n              <p className={s.error}>{errors?.email?.message || \"errors\"}</p>\r\n            )}\r\n          </div>\r\n        </label>\r\n        <label htmlFor=\"\" className={s.formLabel}>\r\n          <TextField\r\n            // color={isValid ? 'secondary' : 'primary'}\r\n            className={s.formInputPhone}\r\n            type=\"phone\"\r\n            {...register(\"phone\", {\r\n              required: \"Required field\",\r\n              pattern: {\r\n                value: /^[+]{0,1}380[0-9]{9}$/i,\r\n                message: \"+38 (XXX) XXX-XX-XX\",\r\n              },\r\n            })}\r\n            id=\"outlined-phone-input\"\r\n            label=\"Phone\"\r\n            autoComplete=\"current-phone\"\r\n            variant=\"outlined\"\r\n          />\r\n          <div className={s.wrapError}>\r\n            {/* +38 (XXX)XXX-XX-XX */}\r\n            {/* {errors?.phone && <p className={s.error}>{errors?.phone?.message || 'Error!'}</p>} */}\r\n            {errors?.phone ? (\r\n              <p className={s.error}>{errors?.phone?.message || \"Error!\"}</p>\r\n            ) : (\r\n              <p className={s.noError}>+38 (XXX) XXX-XX-XX</p>\r\n            )}\r\n          </div>\r\n        </label>\r\n        <p className={s.selectPosition}>Select your position</p>\r\n\r\n        <RadioGroup\r\n          aria-label=\"gender\"\r\n          name=\"gender1\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {positions.map(({ id, name }) => {\r\n            return (\r\n              <FormControlLabel\r\n                {...register(\"position\", { required: \"Required field\" })}\r\n                key={id}\r\n                className={s.formRadio}\r\n                value={name}\r\n                control={<Radio color=\"secondary\" />}\r\n                label={name}\r\n              />\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n\r\n        <div className={s.wrapBtnTextarea}>\r\n          <button className={s.formBtn}>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            {...register(\"photo\", { required: \"Required field\" })}\r\n            className={s.formTextarea}\r\n            placeholder=\"Upload your photo\"\r\n          ></input>\r\n        </div>\r\n        <div className={s.wrapFormSubmit}>\r\n          <button\r\n            type=\"submit\"\r\n            className={isValid ? `${s.actFormSubmit}` : `${s.formSubmit}`}\r\n            disabled={!isValid}\r\n          >\r\n            Sing up\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"names":["BASE_URL","fetchUser","count","axios","then","response","data","fetchToken","token","fetchPosition","positions","useState","value","setValue","setToken","setPositions","useEffect","console","log","useDispatch","useForm","mode","register","handleSubmit","reset","formState","errors","isValid","className","s","onSubmit","email","yourName","position_id","photo","phone","htmlFor","TextField","required","minLength","message","maxLength","id","label","autoComplete","variant","type","pattern","RadioGroup","name","onChange","e","target","map","FormControlLabel","key","control","Radio","color","placeholder","disabled"],"sourceRoot":""}